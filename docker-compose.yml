version: '3.1'

services:
  # adonis_app:
  #   container_name: adonis_app
  #   restart: always
  #   image: dcr.fredkiss.dev/todo-ultra
  #   ports:
  #     - 8090:80
  #     - 9229:9229
  #   env_file:
  #     - .env
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_REPLICA_SET_NAME: rs0
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data/db
      - ./mongodb_keyfile:/opt/keyfile/keyfile
    healthcheck:
      test: |
        test $$(mongosh --quiet -u root -p password --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'localhost' }] }).ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
      start_period: 30s
    command: '--bind_ip_all --keyFile /opt/keyfile/keyfile --replSet rs0'
  redis:
    image: redis
    environment:
      - REDIS_PASSWORD=redis_password
    command: >
      redis-server --requirepass redis_password
    ports:
      - '6379:6379'

  redis-gui:
    image: rediscommander/redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redis_password
    ports:
      - '8089:8081'
volumes:
  mongodb-data:
